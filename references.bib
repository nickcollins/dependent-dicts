@inproceedings{HazelnutPOPL,
 author = {Omar, Cyrus and Voysey, Ian and Hilton, Michael and
           Aldrich, Jonathan and Hammer, Matthew A.},
 title = {Hazelnut: A {B}idirectionally {T}yped {S}tructure {E}ditor {C}alculus},
 booktitle = {ACM SIGPLAN Symposium on Principles of Programming Languages (POPL)},
 year = {2017},
 sortyear = {2017-1}
}

@book{Pierce:SF1,
author       =   {Benjamin C. Pierce and Arthur Azevedo de Amorim
                  and Chris Casinghino and Marco Gaboardi and
                  Michael Greenberg and C\v{a}t\v{a}lin Hri\c{t}cu
                  and Vilhelm Sj\"{o}berg and Brent Yorgey},
title        =   "Logical Foundations",
series       =  "Software Foundations series, volume 1",
month        =   May,
year         =   "2018",
publisher    =   "Electronic textbook",
plclub       =   yes,
bcp          =   yes,
keys         =   "verification,books",
ebook        =   {http://www.cis.upenn.edu/~bcpierce/sf},
japanese     =   {http://proofcafe.org/sf}
}
%note        =   {Version 5.5.  \URL{http://www.cis.upenn.edu/~bcpierce/sf}},

% TODO TODO TODO incorporate these references
%\\
%A comprehensive, extensionality-aware hybrid of CAL and FPF is at
%\\
%https://github.com/arthuraa/extructures/blob/master/theories/fmap.v
%\\
%(also try to make sense of https://github.com/arthuraa/coq-utils/blob/master/theories/nominal.v )
%\\
%Coq also has CALs
%\\
%https://coq.inria.fr/library/Coq.FSets.FMapList.html
%\\
%Coq also has FMapPositive, which is a tree based on the binary representation
%\\
%This one seems to attach a canonicity proof to an ordinary list:
%\\
%http://www.cs.bc.edu/~tassarot/papers/iris-refinement/coqdoc/iris.prelude.natmap.html
%\\
%something something explicit substitutions, Abadi et al. POPL 1990.
%\\
%Look deeper into TDD with Idris
